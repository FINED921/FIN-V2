local WindUI = loadstring(game:HttpGet("https://github.com/Footagesus/WindUI/releases/latest/download/main.lua"))()

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local TextChatService = game:GetService("TextChatService")

local StaminaSettings = {
    StaminaLoss = 10,
    StaminaGain = 25,
    InfiniteGain = 9999
}

WindUI:Popup({
    Title = "欢迎使用FIN脚本",
    Icon = "sparkles",
    Content = "尊敬的FIN用户👑,祝你天天开心",
    Buttons = {
        {
            Title = "启动",
            Icon = "arrow-right",
            Variant = "Primary",
            Callback = function() 
                print("启动被遗弃")
                -- 创建主窗口
                createMainWindow()
            end
        }
    }
})

function createMainWindow()
    local Players = game:GetService("Players")
    local LocalPlayer = Players.LocalPlayer
    local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
    local hum = Character:WaitForChild("HumanoidRootPart")
    local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")
    
    -- 声明所有线程控制变量
    local teleportMedkitThread, teleportColaThread, medkitThread, colaThread
    local autoTeleportMedkitEnabled, autoTeleportColaEnabled, autoMedkitEnabled, autoColaEnabled

    local Window = WindUI:CreateWindow({
        Title = "FIN | 被遗弃",
        Icon = "rbxassetid://129260712070622",
        IconThemed = true,
        Author = "作者:鑫晴",
        Folder = "CloudHub",
        Size = UDim2.fromOffset(300, 270),
        Transparent = true,
        Theme = "Dark",
        User = {
            Enabled = true,
            Callback = function() print("clicked") end,
            Anonymous = false
        },
        SideBarWidth = 200,
        ScrollBarEnabled = true,
    })

    Window:Tag({
        Title = "v1.3.4",
        Color = Color3.fromHex("#30ff6a")
    })
    Window:Tag({
        Title = "测试版", 
        Color = Color3.fromHex("#315dff")
    })
    local TimeTag = Window:Tag({
        Title = "持续更新",
        Color = Color3.fromHex("#000000")
    })

    Window:EditOpenButton({
        Title = "FIN | 被遗弃",
        Icon = "star",
        CornerRadius = UDim.new(0,16),
        StrokeThickness = 2,
        Color = ColorSequence.new(
            Color3.fromHex("FF0F7B"), 
            Color3.fromHex("F89B29")
        ),
        Draggable = true,
    })

    local Tab = Window:Tab({
        Title = "基础功能",
        Icon = "drama",
        Locked = false,
    })

    local Toggle = Tab:Toggle({
        Title = "显示局内聊天框",
        Desc = "FIN",
        Locked = false,
        Callback = function(state)
            if TextChatService:FindFirstChild("ChatWindowConfiguration") then
                TextChatService.ChatWindowConfiguration.Enabled = state
            end
        end
    })

    local Tab2 = Window:Tab({
        Title = "体力消耗",
        Icon = "drama",
        Locked = false,
    })

    local function GetSprintingModule()
        if ReplicatedStorage:FindFirstChild("Systems") and
           ReplicatedStorage.Systems:FindFirstChild("Character") and
           ReplicatedStorage.Systems.Character:FindFirstChild("Game") and
           ReplicatedStorage.Systems.Character.Game:FindFirstChild("Sprinting") then
            return require(ReplicatedStorage.Systems.Character.Game.Sprinting)
        end
        return nil
    end

    local bai = {Spr = false}
    local connection

    local Toggle2 = Tab2:Toggle({
        Title = "无限体力",
        Desc = "FIN",
        Locked = false,
        Callback = function(state)
            bai.Spr = state
            local Sprinting = GetSprintingModule()
            
            if not Sprinting then
                warn("无法找到体力模块!")
                return
            end

            if state then
                Sprinting.StaminaLoss = 0
                Sprinting.StaminaGain = StaminaSettings.InfiniteGain or 9999

                if connection then connection:Disconnect() end
                connection = RunService.Heartbeat:Connect(function()
                    if not bai.Spr then 
                        connection:Disconnect()
                        return 
                    end
                    Sprinting.StaminaLoss = 0
                    Sprinting.StaminaGain = StaminaSettings.InfiniteGain or 9999
                end)
            else
                Sprinting.StaminaLoss = StaminaSettings.StaminaLoss or 10
                Sprinting.StaminaGain = StaminaSettings.StaminaGain or 25

                if connection then
                    connection:Disconnect()
                    connection = nil
                end
            end
        end
    })

    local Tab3 = Window:Tab({
        Title = "自动收取物品",
        Icon = "drama",
        Locked = false,
    })

    local Toggle3 = Tab3:Toggle({
        Title = "医疗包传送且获取",
        Desc = "FIN",
        Locked = false,
        Callback = function(state)
            autoTeleportMedkitEnabled = state
            
            if autoTeleportMedkitEnabled then
                teleportMedkitThread = task.spawn(function()
                    while autoTeleportMedkitEnabled and task.wait(0.5) do
                        local character = game.Players.LocalPlayer.Character
                        if character and character:FindFirstChild("HumanoidRootPart") then
                            local humanoidRootPart = character.HumanoidRootPart
                            
                            local medkit = workspace:FindFirstChild("Map", true)
                            if medkit then
                                medkit = medkit:FindFirstChild("Ingame", true)
                                if medkit then
                                    medkit = medkit:FindFirstChild("Medkit", true)
                                    if medkit then
                                        local itemRoot = medkit:FindFirstChild("ItemRoot", true)
                                        if itemRoot then
                                            itemRoot.CFrame = humanoidRootPart.CFrame + humanoidRootPart.CFrame.LookVector * 3
                                            
                                            local prompt = itemRoot:FindFirstChild("ProximityPrompt", true)
                                            if prompt then
                                                fireproximityprompt(prompt)
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end)
            elseif teleportMedkitThread then
                task.cancel(teleportMedkitThread)
                teleportMedkitThread = nil
            end
        end
    })

    local Toggle4 = Tab3:Toggle({
        Title = "可乐罐传送且获取",
        Desc = "FIN",
        Locked = false,
        Callback = function(state)
            autoTeleportColaEnabled = state
            
            if autoTeleportColaEnabled then
                teleportColaThread = task.spawn(function()
                    while autoTeleportColaEnabled and task.wait(0.5) do
                        local character = game.Players.LocalPlayer.Character
                        if character and character:FindFirstChild("HumanoidRootPart") then
                            local humanoidRootPart = character.HumanoidRootPart
                            
                            local cola = workspace:FindFirstChild("Map", true)
                            if cola then
                                cola = cola:FindFirstChild("Ingame", true)
                                if cola then
                                    cola = cola:FindFirstChild("BloxyCola", true)
                                    if cola then
                                        local itemRoot = cola:FindFirstChild("ItemRoot", true)
                                        if itemRoot then
                                            itemRoot.CFrame = humanoidRootPart.CFrame + humanoidRootPart.CFrame.LookVector * 3
                                            
                                            local prompt = itemRoot:FindFirstChild("ProximityPrompt", true)
                                            if prompt then
                                                fireproximityprompt(prompt)
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end)
            elseif teleportColaThread then
                task.cancel(teleportColaThread)
                teleportColaThread = nil
            end
        end
    })

    local Toggle5 = Tab3:Toggle({
        Title = "自动互动医疗包",
        Desc = "不关上无法丢弃💀",
        Locked = false,
        Callback = function(state)
            autoMedkitEnabled = state
            
            if autoMedkitEnabled then
                medkitThread = task.spawn(function()
                    while autoMedkitEnabled and task.wait(0.5) do
                        local medkit = workspace:FindFirstChild("Map", true)
                        if medkit then
                            medkit = medkit:FindFirstChild("Ingame", true)
                            if medkit then
                                medkit = medkit:FindFirstChild("Medkit", true)
                                if medkit then
                                    local itemRoot = medkit:FindFirstChild("ItemRoot", true)
                                    if itemRoot then
                                        local prompt = itemRoot:FindFirstChild("ProximityPrompt", true)
                                        if prompt then
                                            fireproximityprompt(prompt)
                                        end
                                    end
                                end
                            end
                        end
                    end
                end)
            elseif medkitThread then
                task.cancel(medkitThread)
                medkitThread = nil
            end
        end
    })

    local Toggle6 = Tab3:Toggle({
        Title = "自动互动可乐罐",
        Desc = "不关上无法丢弃💀",
        Locked = false,
        Callback = function(state)
            autoColaEnabled = state
            
            if autoColaEnabled then
                colaThread = task.spawn(function()
                    while autoColaEnabled and task.wait(0.5) do
                        local cola = workspace:FindFirstChild("Map", true)
                        if cola then
                            cola = cola:FindFirstChild("Ingame", true)
                            if cola then
                                cola = cola:FindFirstChild("BloxyCola", true)
                                if cola then
                                    local itemRoot = cola:FindFirstChild("ItemRoot", true)
                                    if itemRoot then
                                        local prompt = itemRoot:FindFirstChild("ProximityPrompt", true)
                                        if prompt then
                                            fireproximityprompt(prompt)
                                        end
                                    end
                                end
                            end
                        end
                    end
                end)
            elseif colaThread then
                task.cancel(colaThread)
                colaThread = nil
            end
        end
    })

    local Tab4 = Window:Tab({
        Title = "修发动机",
        Icon = "drama",
        Locked = false,
    })

    local Toggle7 = Tab4:Toggle({
        Title = "自动修机",
        Desc = "FIN",
        Locked = false,
        Callback = function(state)
            _G.BTE = state
            _G.REP = _G.REP or 1.80

            local function RepairGenerators()
                local map = workspace:FindFirstChild("Map")
                local ingame = map and map:FindFirstChild("Ingame")
                local currentMap = ingame and ingame:FindFirstChild("Map")

                if currentMap then
                    for _, obj in ipairs(currentMap:GetChildren()) do
                        if obj.Name == "Generator" and obj:FindFirstChild("Progress") and obj.Progress.Value < 100 then
                            local remote = obj:FindFirstChild("Remotes") and obj.Remotes:FindFirstChild("RE")
                            if remote then
                                remote:FireServer()
                            end
                        end
                    end
                end
            end

            if state then
                task.spawn(function()
                    while _G.BTE do
                        RepairGenerators()
                        task.wait(_G.REP)
                    end
                end)
            end
        end
    })

    local Tab5 = Window:Tab({
        Title = "绘制",
        Icon = "drama",
        Locked = false,
    })

local Button = Tab5:Button({
    Title = "一键绘制",
    Desc = "绘制幸存者 杀手 发电机",
    Locked = false,
    Callback = function()
    local sur = workspace.Players.Survivors
local kil = workspace.Players.Killers
local spe = workspace.Players.Spectating
local ing = workspace.Map.Ingame

print("By Syndrome")

local function survivoresp(char)
local billboard = Instance.new("BillboardGui")
billboard.Size = UDim2.new(2, 0, 0.5, 0) 
billboard.StudsOffset = Vector3.new(0, 1.25, 0) 
billboard.Adornee = char.Head
billboard.Parent = char.Head
billboard.AlwaysOnTop = true
local textLabel = Instance.new("TextLabel")
textLabel.Size = UDim2.new(1, 0, 1, 0)
textLabel.Position = UDim2.new(0, 1, 0, 1)
textLabel.BackgroundTransparency = 1
textLabel.TextScaled = true
textLabel.Text = "血量: "..char.Humanoid.Health.."/"..char.Humanoid.MaxHealth 
textLabel.TextColor3 = Color3.fromRGB(255, 100, 28)
textLabel.Font = Enum.Font.Arcade
textLabel.Parent = billboard

local charnamebill = Instance.new("BillboardGui")
charnamebill.Size = UDim2.new(9, 0, 1, 0) 
charnamebill.StudsOffset = Vector3.new(0, 2, 0) 
charnamebill.Adornee = char.Head
charnamebill.Parent = char.Head
charnamebill.AlwaysOnTop = true
local charnametext = Instance.new("TextLabel")
charnametext.Size = UDim2.new(1, 0, 1, 0)
charnametext.Position = UDim2.new(0, 1, 0, 1)
charnametext.BackgroundTransparency = 1
charnametext.TextScaled = true
charnametext.Text = char.Name
charnametext.TextColor3 = Color3.fromRGB(255, 100, 28)
charnametext.Font = Enum.Font.Arcade
charnametext.Parent = charnamebill

local highlight = Instance.new("Highlight", char)
highlight.Archivable = true
highlight.DepthMode = "AlwaysOnTop"
highlight.Enabled = true
highlight.OutlineColor= Color3.fromRGB(255, 100, 28)
highlight.FillColor= Color3.fromRGB(255, 100, 28)
highlight.FillTransparency = 0.9
highlight.OutlineTransparency = 0
highlight.Parent = char


local temp = char:FindFirstChild("Humanoid").HealthChanged:Connect(function()
	textLabel.Text = "血量: "..char:FindFirstChild("Humanoid").Health.."/"..char:FindFirstChild("Humanoid").MaxHealth
end)

char:FindFirstChild("Humanoid").Died:Connect(function()
	temp:Disconnect()
	textLabel.Text = ""
	charnametext.Text = ""
	highlight.OutlineTransparency = 1
end)


return textLabel

end

local function killeresp(char)
local billboard = Instance.new("BillboardGui")
billboard.Size = UDim2.new(2, 0, 0.5, 0) 
billboard.StudsOffset = Vector3.new(0, 1.25, 0) 
billboard.Adornee = char.Head
billboard.Parent = char.Head
billboard.AlwaysOnTop = true
local textLabel = Instance.new("TextLabel")
textLabel.Size = UDim2.new(1, 0, 1, 0)
textLabel.Position = UDim2.new(0, 1, 0, 1)
textLabel.BackgroundTransparency = 1
textLabel.TextScaled = true
textLabel.Text = "血量: "..char.Humanoid.Health.."/"..char.Humanoid.MaxHealth 
textLabel.TextColor3 = Color3.fromRGB(204, 0, 0)
textLabel.Font = Enum.Font.Arcade
textLabel.Parent = billboard

local charnamebill = Instance.new("BillboardGui")
charnamebill.Size = UDim2.new(9, 0, 1, 0) 
charnamebill.StudsOffset = Vector3.new(0, 2, 0) 
charnamebill.Adornee = char.Head
charnamebill.Parent = char.Head
charnamebill.AlwaysOnTop = true
local charnametext = Instance.new("TextLabel")
charnametext.Size = UDim2.new(1, 0, 1, 0)
charnametext.Position = UDim2.new(0, 1, 0, 1)
charnametext.BackgroundTransparency = 1
charnametext.TextScaled = true
charnametext.Text = char.Name
charnametext.TextColor3 = Color3.fromRGB(204, 0, 0)
charnametext.Font = Enum.Font.Arcade
charnametext.Parent = charnamebill

local highlight = Instance.new("Highlight", char)
highlight.Archivable = true
highlight.DepthMode = "AlwaysOnTop"
highlight.Enabled = true
highlight.OutlineColor= Color3.fromRGB(204, 0, 0)
highlight.FillColor= Color3.fromRGB(204, 0, 0)
highlight.FillTransparency = 0.9
highlight.OutlineTransparency = 0
highlight.Parent = char


local temp = char:FindFirstChild("Humanoid").HealthChanged:Connect(function()
	textLabel.Text = "血量: "..char:FindFirstChild("Humanoid").Health.."/"..char:FindFirstChild("Humanoid").MaxHealth
end)

char:FindFirstChild("Humanoid").Died:Connect(function()
	temp:Disconnect()
	textLabel.Text = ""
	charnametext.Text = ""
	highlight.OutlineTransparency = 1
end)


return textLabel

end

local function specesp(char) 
local billboard = Instance.new("BillboardGui")
billboard.Size = UDim2.new(2, 0, 0.5, 0) 
billboard.StudsOffset = Vector3.new(0, 1.25, 0) 
billboard.Adornee = char.Head
billboard.Parent = char.Head
billboard.AlwaysOnTop = true
local textLabel = Instance.new("TextLabel")
textLabel.Size = UDim2.new(1, 0, 1, 0)
textLabel.Position = UDim2.new(0, 1, 0, 1)
textLabel.BackgroundTransparency = 1
textLabel.TextScaled = true
textLabel.Text = "血量: "..char.Humanoid.Health.."/"..char.Humanoid.MaxHealth 
textLabel.TextColor3 = Color3.fromRGB(117, 117, 117)
textLabel.Font = Enum.Font.Arcade
textLabel.Parent = billboard

local charnamebill = Instance.new("BillboardGui")
charnamebill.Size = UDim2.new(9, 0, 1, 0) 
charnamebill.StudsOffset = Vector3.new(0, 2, 0) 
charnamebill.Adornee = char.Head
charnamebill.Parent = char.Head
charnamebill.AlwaysOnTop = true
local charnametext = Instance.new("TextLabel")
charnametext.Size = UDim2.new(1, 0, 1, 0)
charnametext.Position = UDim2.new(0, 1, 0, 1)
charnametext.BackgroundTransparency = 1
charnametext.TextScaled = true
charnametext.Text = char.Name
charnametext.TextColor3 = Color3.fromRGB(117, 117, 117)
charnametext.Font = Enum.Font.Arcade
charnametext.Parent = charnamebill

local highlight = Instance.new("Highlight", char)
highlight.Archivable = true
highlight.DepthMode = "AlwaysOnTop"
highlight.Enabled = true
highlight.OutlineColor= Color3.fromRGB(117, 117, 117)
highlight.FillColor= Color3.fromRGB(117, 117, 117)
highlight.FillTransparency = 0.9
highlight.OutlineTransparency = 0
highlight.Parent = char


local temp = char:FindFirstChild("Humanoid").HealthChanged:Connect(function()
	textLabel.Text = "血量: "..char:FindFirstChild("Humanoid").Health.."/"..char:FindFirstChild("Humanoid").MaxHealth
end)

char:FindFirstChild("Humanoid").Died:Connect(function()
	temp:Disconnect()
	textLabel.Text = ""
	charnametext.Text = ""
	highlight.OutlineTransparency = 1
end)


return textLabel

end

local function genesp(p)
local billboard = Instance.new("BillboardGui")
billboard.Size = UDim2.new(2, 0, 0.5, 0) 
billboard.StudsOffset = Vector3.new(0, 1.25, 0) 
billboard.Adornee = p.Main
billboard.Parent = p.Main
billboard.AlwaysOnTop = true
local textLabel = Instance.new("TextLabel")
textLabel.Size = UDim2.new(1, 0, 1, 0)
textLabel.Position = UDim2.new(0, 1, 0, 1)
textLabel.BackgroundTransparency = 1
textLabel.TextScaled = true
textLabel.Text = ""
textLabel.TextColor3 = Color3.fromRGB(255, 206, 28)
textLabel.Font = Enum.Font.Arcade
textLabel.Parent = billboard

local gennamebill = Instance.new("BillboardGui")
gennamebill.Size = UDim2.new(9, 0, 1, 0) 
gennamebill.StudsOffset = Vector3.new(0, 2, 0) 
gennamebill.Adornee = p.Main
gennamebill.Parent = p.Main
gennamebill.AlwaysOnTop = true
local gennametext = Instance.new("TextLabel")
gennametext.Size = UDim2.new(1, 0, 1, 0)
gennametext.Position = UDim2.new(0, 1, 0, 1)
gennametext.BackgroundTransparency = 1
gennametext.TextScaled = true
gennametext.Text = p.Name
gennametext.TextColor3 = Color3.fromRGB(255, 206, 28)
gennametext.Font = Enum.Font.Arcade
gennametext.Parent = gennamebill

local highlight = Instance.new("Highlight", char)
highlight.Archivable = true
highlight.DepthMode = "AlwaysOnTop"
highlight.Enabled = true
highlight.OutlineColor= Color3.fromRGB(255, 206, 28)
highlight.FillColor= Color3.fromRGB(255, 206, 28)
highlight.FillTransparency = 0.9
highlight.OutlineTransparency = 0
highlight.Parent = p


local temp = game:GetService("RunService").Heartbeat:Connect(function()
if p:FindFirstChild("Progress").Value >= 99 then
	gennametext.Text = ""
	highlight:Destroy()
	textLabel.Text = ""
	else
	gennametext.Text = "Generator"
	textLabel.Text = "修机进度: "..p.Progress.Value.."%"
end
end)

if p:FindFirstChild("Progress").Value >= 99 then
	temp:Disconnect()
end

p.Destroying:Connect(function()
		temp:Disconnect()
end)

return textLabel

end

local function itemesp(p)
local billboard = Instance.new("BillboardGui")
billboard.Size = UDim2.new(2, 0, 0.5, 0) 
billboard.StudsOffset = Vector3.new(0, 1.25, 0) 
billboard.Adornee = p:FindFirstChild("ItemRoot")
billboard.Parent = p:FindFirstChild("ItemRoot")
billboard.AlwaysOnTop = true
local textLabel = Instance.new("TextLabel")
textLabel.Size = UDim2.new(1, 0, 1, 0)
textLabel.Position = UDim2.new(0, 1, 0, 1)
textLabel.BackgroundTransparency = 1
textLabel.TextScaled = true
textLabel.Text = p.Name
textLabel.TextColor3 = Color3.fromRGB(32, 54, 153)
textLabel.Font = Enum.Font.Arcade
textLabel.Parent = billboard

local highlight = Instance.new("Highlight", char)
highlight.Archivable = true
highlight.DepthMode = "AlwaysOnTop"
highlight.Enabled = true
highlight.OutlineColor= Color3.fromRGB(32, 54, 153)
highlight.FillColor= Color3.fromRGB(32, 54, 153)
highlight.FillTransparency = 0.9
highlight.OutlineTransparency = 0
highlight.Parent = p


return textLabel

end

sur.DescendantAdded:Connect(function(v)
	if v:IsA("Model") and v:FindFirstChild("Humanoid") then
	repeat wait() until v:FindFirstChild("Humanoid")
		survivoresp(v)
	end
end)

for _,v in pairs(sur:GetDescendants()) do
	if v:IsA("Model") and v:FindFirstChild("Humanoid") then
	repeat wait() until v:FindFirstChild("Humanoid")
		survivoresp(v)
	end
end

kil.DescendantAdded:Connect(function(v)
	if v:IsA("Model") and v:FindFirstChild("Humanoid")  then
	repeat wait() until v:FindFirstChild("Humanoid")
		killeresp(v)
	end
end)

for _,v in pairs(kil:GetDescendants()) do
	if v:IsA("Model") and v:FindFirstChild("Humanoid") then
	repeat wait() until v:FindFirstChild("Humanoid")
		killeresp(v)
	end
end

spe.DescendantAdded:Connect(function(v)
	if v:IsA("Model") and v:FindFirstChild("Humanoid") then
	repeat wait() until v:FindFirstChild("Humanoid")
		specesp(v)
	end
end)

for _,v in pairs(spe:GetDescendants()) do
	if v:IsA("Model") and v:FindFirstChild("Humanoid") then
	repeat wait() until v:FindFirstChild("Humanoid")
		specesp(v)
	end
end

ing.DescendantAdded:Connect(function(v)
	if v:IsA("Model") and v:FindFirstChild("Main")  and v.Name == "Generator" then
		repeat wait() until v.Name == "Generator"
		genesp(v)
	end
end)

for _,v in pairs(ing:GetDescendants()) do
	if v:IsA("Model") and v:FindFirstChild("Main") and v.Name == "Generator" then
	repeat wait() until v.Name == "Generator"
		genesp(v)
	end
end

ing.DescendantAdded:Connect(function(v)
	if v:IsA("Tool") then
	repeat wait() until v:IsA("Tool")
		itemesp(v)
	end
end)

for _,v in pairs(ing:GetDescendants()) do
	if v:IsA("Tool") then
	repeat wait() until v:IsA("Tool")
		itemesp(v)
	end
end
    end
})

    -- 初始化设置
    local DistanceSettings = {
        ShowSurvivors = true,
        ShowKillers = true,
        SurvivorColor = Color3.fromRGB(0, 191, 255), -- 默认幸存者蓝色
        KillerColor = Color3.fromRGB(255, 0, 0),     -- 默认杀手红色
        TextSize = 14
    }

    -- 距离显示功能
    local function updateDistanceDisplay()
        -- 先关闭现有连接
        if getgenv().distanceUnderFeetConnection then
            getgenv().distanceUnderFeetConnection:Disconnect()
        end
        
        if getgenv().characterRemovedConnection then
            getgenv().characterRemovedConnection:Disconnect()
        end
        
        -- 如果两个都关闭则完全禁用
        if not DistanceSettings.ShowSurvivors and not DistanceSettings.ShowKillers then
            if getgenv().distanceUnderFeetLabels then
                for _, data in pairs(getgenv().distanceUnderFeetLabels) do
                    pcall(function() data.label:Remove() end)
                end
                getgenv().distanceUnderFeetLabels = nil
            end
            return
        end
        
        -- 初始化变量
        local players = game:GetService("Players")
        local runService = game:GetService("RunService")
        local localPlayer = players.LocalPlayer
        local camera = workspace.CurrentCamera
        
        -- 存储所有距离标签
        getgenv().distanceUnderFeetLabels = getgenv().distanceUnderFeetLabels or {}
        
        -- 主循环
        getgenv().distanceUnderFeetConnection = runService.RenderStepped:Connect(function()
            local localChar = localPlayer.Character
            if not localChar or not localChar:FindFirstChild("HumanoidRootPart") then return end
            
            local localPos = localChar.HumanoidRootPart.Position
            
            -- 处理幸存者
            if DistanceSettings.ShowSurvivors then
                local survivors = workspace.Players:FindFirstChild("Survivors")
                if survivors then
                    for _, survivor in ipairs(survivors:GetChildren()) do
                        if survivor:IsA("Model") and survivor ~= localChar then
                            local hrp = survivor:FindFirstChild("HumanoidRootPart")
                            if hrp then
                                if not getgenv().distanceUnderFeetLabels[survivor] then
                                    getgenv().distanceUnderFeetLabels[survivor] = {
                                        label = Drawing.new("Text"),
                                        type = "Survivor"
                                    }
                                    local label = getgenv().distanceUnderFeetLabels[survivor].label
                                    label.Size = DistanceSettings.TextSize
                                    label.Center = true
                                    label.Outline = true
                                    label.Font = 2
                                end
                                
                                local data = getgenv().distanceUnderFeetLabels[survivor]
                                local distance = math.floor((hrp.Position - localPos).Magnitude)
                                local screenPos, onScreen = camera:WorldToViewportPoint(hrp.Position - Vector3.new(0, 3, 0))
                                
                                if onScreen then
                                    data.label.Position = Vector2.new(screenPos.X, screenPos.Y)
                                    data.label.Text = tostring(distance) .. "m"
                                    data.label.Color = DistanceSettings.SurvivorColor
                                    data.label.Visible = true
                                else
                                    data.label.Visible = false
                                end
                            end
                        end
                    end
                end
            else
                -- 隐藏所有幸存者标签
                for model, data in pairs(getgenv().distanceUnderFeetLabels or {}) do
                    if data.type == "Survivor" then
                        data.label.Visible = false
                    end
                end
            end
            
            -- 处理杀手
            if DistanceSettings.ShowKillers then
                local killers = workspace.Players:FindFirstChild("Killers")
                if killers then
                    for _, killer in ipairs(killers:GetChildren()) do
                        if killer:IsA("Model") then
                            local hrp = killer:FindFirstChild("HumanoidRootPart")
                            if hrp then
                                if not getgenv().distanceUnderFeetLabels[killer] then
                                    getgenv().distanceUnderFeetLabels[killer] = {
                                        label = Drawing.new("Text"),
                                        type = "Killer"
                                    }
                                    local label = getgenv().distanceUnderFeetLabels[killer].label
                                    label.Size = DistanceSettings.TextSize
                                    label.Center = true
                                    label.Outline = true
                                    label.Font = 2
                                end
                                
                                local data = getgenv().distanceUnderFeetLabels[killer]
                                local distance = math.floor((hrp.Position - localPos).Magnitude)
                                local screenPos, onScreen = camera:WorldToViewportPoint(hrp.Position - Vector3.new(0, 3, 0))
                                
                                if onScreen then
                                    data.label.Position = Vector2.new(screenPos.X, screenPos.Y)
                                    data.label.Text = tostring(distance) .. "m"
                                    data.label.Color = DistanceSettings.KillerColor
                                    data.label.Visible = true
                                else
                                    data.label.Visible = false
                                end
                            end
                        end
                    end
                end
            else
                -- 隐藏所有杀手标签
                for model, data in pairs(getgenv().distanceUnderFeetLabels or {}) do
                    if data.type == "Killer" then
                        data.label.Visible = false
                    end
                end
            end
        end)
        
        -- 监听角色移除
        getgenv().characterRemovedConnection = workspace.Players.DescendantRemoving:Connect(function(descendant)
            if descendant:IsA("Model") and getgenv().distanceUnderFeetLabels and getgenv().distanceUnderFeetLabels[descendant] then
                getgenv().distanceUnderFeetLabels[descendant].label:Remove()
                getgenv().distanceUnderFeetLabels[descendant] = nil
            end
        end)
    end

    local Toggle8 = Tab5:Toggle({
        Title = "绘制幸存者距离",
        Desc = "FIN",
        Locked = false,
        Callback = function(enabled)
            DistanceSettings.ShowSurvivors = enabled
            if getgenv().distanceUnderFeetConnection then
                updateDistanceDisplay()
            end
        end
    })

    local Toggle9 = Tab5:Toggle({
        Title = "绘制杀手距离",
        Desc = "FIN",
        Locked = false,
        Callback = function(enabled)
            DistanceSettings.ShowKillers = enabled
            if getgenv().distanceUnderFeetConnection then
                updateDistanceDisplay()
            end
        end
    })

    -- 高亮设置
    local HighlightSettings = {
        ShowSurvivorHighlights = true,
        ShowKillerHighlights = true,
        FillTransparency = 0.5,
        OutlineTransparency = 0,
        SurvivorColors = {
            Blue = Color3.fromRGB(0, 120, 255),
            Green = Color3.fromRGB(0, 255, 0),
            Yellow = Color3.fromRGB(255, 255, 0)
        },
        KillerColors = {
            Red = Color3.fromRGB(255, 0, 0),
            Purple = Color3.fromRGB(255, 0, 255),
            Orange = Color3.fromRGB(255, 128, 0)
        },
        SurvivorOutlineColors = {
            White = Color3.fromRGB(255, 255, 255),
            Black = Color3.fromRGB(0, 0, 0)
        },
        KillerOutlineColors = {
            White = Color3.fromRGB(255, 255, 255),
            Black = Color3.fromRGB(0, 0, 0)
        },
        SelectedSurvivorColor = "Blue",
        SelectedKillerColor = "Red",
        SelectedSurvivorOutlineColor = "White",
        SelectedKillerOutlineColor = "White",
        highlights = {},
        connection = nil
    }

    -- 清理高亮对象
    local function cleanupHighlights()
        for _, highlight in pairs(HighlightSettings.highlights) do
            if highlight and highlight.Parent then
                highlight:Destroy()
            end
        end
        HighlightSettings.highlights = {}
    end

    -- 更新高亮显示
    local function updateHighlights()
        local players = game:GetService("Players")
        local localPlayer = players.LocalPlayer
        
        -- 获取幸存者和杀手文件夹
        local survivorsFolder = workspace:FindFirstChild("Players") and workspace.Players:FindFirstChild("Survivors")
        local killersFolder = workspace:FindFirstChild("Players") and workspace.Players:FindFirstChild("Killers")
        
        -- 只处理幸存者和杀手
        local function processFolder(folder, isKiller)
            if not folder then return end
            
            for _, model in ipairs(folder:GetChildren()) do
                if model:IsA("Model") then
                    -- 确定颜色
                    local fillColor = isKiller and HighlightSettings.KillerColors[HighlightSettings.SelectedKillerColor] 
                                              or HighlightSettings.SurvivorColors[HighlightSettings.SelectedSurvivorColor]
                    
                    local outlineColor = isKiller and HighlightSettings.KillerOutlineColors[HighlightSettings.SelectedKillerOutlineColor] 
                                                  or HighlightSettings.SurvivorOutlineColors[HighlightSettings.SelectedSurvivorOutlineColor]
                    
                    -- 根据设置决定是否显示
                    if (isKiller and HighlightSettings.ShowKillerHighlights) or 
                       (not isKiller and HighlightSettings.ShowSurvivorHighlights) then
                        
                        if not HighlightSettings.highlights[model] then
                            local highlight = Instance.new("Highlight")
                            highlight.Parent = game.CoreGui
                            HighlightSettings.highlights[model] = highlight
                        end
                        
                        local highlight = HighlightSettings.highlights[model]
                        highlight.Adornee = model
                        highlight.FillColor = fillColor
                        highlight.OutlineColor = outlineColor
                        highlight.FillTransparency = HighlightSettings.FillTransparency
                        highlight.OutlineTransparency = HighlightSettings.OutlineTransparency
                    elseif HighlightSettings.highlights[model] then
                        HighlightSettings.highlights[model].Adornee = nil
                    end
                end
            end
        end
        
        -- 处理幸存者
        processFolder(survivorsFolder, false)
        
        -- 处理杀手
        processFolder(killersFolder, true)
        
        -- 清理不再存在的模型的高亮
        for model, highlight in pairs(HighlightSettings.highlights) do
            if not model or not model.Parent then
                highlight:Destroy()
                HighlightSettings.highlights[model] = nil
            end
        end
    end

    local Toggle10 = Tab5:Toggle({
        Title = "启动绘制",
        Desc = "FIN",
        Locked = false,
        Callback = function(enabled)
            if enabled then
                -- 初始化连接
                if not HighlightSettings.connection then
                    HighlightSettings.connection = game:GetService("RunService").RenderStepped:Connect(updateHighlights)
                end
            else
                -- 关闭连接
                if HighlightSettings.connection then
                    HighlightSettings.connection:Disconnect()
                    HighlightSettings.connection = nil
                end
                -- 清理高亮对象
                cleanupHighlights()
            end
        end
    })

    local Toggle11 = Tab5:Toggle({
        Title = "绘制幸存者",
        Desc = "FIN",
        Locked = false,
        Callback = function(enabled)
            HighlightSettings.ShowSurvivorHighlights = enabled
        end
    })

    local Toggle12 = Tab5:Toggle({
        Title = "绘制杀手", 
        Desc = "FIN",
        Locked = false,
        Callback = function(enabled)
            HighlightSettings.ShowKillerHighlights = enabled
        end
    })
end

local Toggle13 = Tab5:Toggle({
        Title = "绘制发电机",
        Desc = "FIN",
        Locked = false,
        Callback = function(enabled)
        -- 将 generatorData 移到回调函数内部，确保每次开启都是独立的作用域
        local generatorData = {}
        
        if enabled then
            local scanInterval = 0.5 
            local lastScanTime = 0
            
            local distanceSettings = {
                MinDistance = 5,
                MaxDistance = 100,
                MinScale = 0.8,
                MaxScale = 1.5,
                MinTextSize = 8,
                MaxTextSize = 10
            }
            
            local function updateGeneratorESP(gen, data)
                if not gen or not gen:FindFirstChild("Main") then return end
                
                local character = game:GetService("Players").LocalPlayer.Character
                local humanoidRootPart = character and character:FindFirstChild("HumanoidRootPart")
                
                if gen:FindFirstChild("Progress") then
                    local progress = gen.Progress.Value
                    if progress >= 99 then
                        if data.billboard then data.billboard:Destroy() end
                        if data.distanceBillboard then data.distanceBillboard:Destroy() end
                        if data.highlight then data.highlight:Destroy() end
                        generatorData[gen] = nil
                        return
                    end
                    
                    if data.textLabel then
                        data.textLabel.Text = string.format("电机进度: %d%%", progress)
                    end
                    
                    if humanoidRootPart and data.distanceLabel then
                        local distance = (gen.Main.Position - humanoidRootPart.Position).Magnitude
                        data.distanceLabel.Text = string.format("距离: %d米", math.floor(distance))
                        
                        local distanceRatio = math.clamp(
                            (distance - distanceSettings.MinDistance) / 
                            (distanceSettings.MaxDistance - distanceSettings.MinDistance),
                            0, 1
                        )
                        
                        local scale = distanceSettings.MinScale + 
                            distanceRatio * (distanceSettings.MaxScale - distanceSettings.MinScale)
                        
                        local textSize = distanceSettings.MinTextSize + 
                            distanceRatio * (distanceSettings.MaxTextSize - distanceSettings.MinTextSize)
                        
                        if data.billboard then data.billboard.Size = UDim2.new(4 * scale, 0, 1 * scale, 0) end
                        if data.distanceBillboard then data.distanceBillboard.Size = UDim2.new(4 * scale, 0, 1 * scale, 0) end
                        if data.textLabel then data.textLabel.TextSize = textSize end
                        if data.distanceLabel then data.distanceLabel.TextSize = textSize end
                        
                        local transparency = math.clamp((distance - 50) / 100, 0, 0.4)
                        if data.textLabel then data.textLabel.TextTransparency = transparency end
                        if data.distanceLabel then data.distanceLabel.TextTransparency = transparency end
                        if data.highlight then data.highlight.FillTransparency = 0.85 + (transparency * 0.5) end
                    end
                end
            end
            
            local function createGeneratorESP(gen)
                if not gen or not gen:FindFirstChild("Main") or generatorData[gen] then return end
                
                local billboard = Instance.new("BillboardGui")
                billboard.Name = "GeneratorESP"
                billboard.Size = UDim2.new(4, 0, 1, 0)
                billboard.StudsOffset = Vector3.new(0, 2.5, 0)
                billboard.Adornee = gen.Main
                billboard.Parent = gen.Main
                billboard.AlwaysOnTop = true
                
                local textLabel = Instance.new("TextLabel")
                textLabel.Size = UDim2.new(1, 0, 0.5, 0)
                textLabel.BackgroundTransparency = 1
                textLabel.TextScaled = false
                textLabel.Text = "电机加载中..."
                textLabel.TextColor3 = Color3.fromRGB(0, 255, 255)
                textLabel.Font = Enum.Font.Arcade
                textLabel.TextStrokeTransparency = 0
                textLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
                textLabel.TextSize = 8
                textLabel.Parent = billboard
                
                local distanceBillboard = Instance.new("BillboardGui")
                distanceBillboard.Name = "GeneratorDistanceESP"
                distanceBillboard.Size = UDim2.new(4, 0, 1, 0)
                distanceBillboard.StudsOffset = Vector3.new(0, 3.5, 0)
                distanceBillboard.Adornee = gen.Main
                distanceBillboard.Parent = gen.Main
                distanceBillboard.AlwaysOnTop = true
                
                local distanceLabel = Instance.new("TextLabel")
                distanceLabel.Size = UDim2.new(1, 0, 0.5, 0)
                distanceLabel.BackgroundTransparency = 1
                distanceLabel.TextScaled = false
                distanceLabel.Text = "计算距离中..."
                distanceLabel.TextColor3 = Color3.fromRGB(255, 255, 0)
                distanceLabel.Font = Enum.Font.Arcade
                distanceLabel.TextStrokeTransparency = 0
                distanceLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
                distanceLabel.TextSize = 8
                distanceLabel.Parent = distanceBillboard
                
                local highlight = Instance.new("Highlight")
                highlight.Name = "GeneratorHighlight"
                highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
                highlight.Enabled = true
                highlight.OutlineColor = Color3.fromRGB(0, 255, 255)
                highlight.FillColor = Color3.fromRGB(0, 255, 255)
                highlight.FillTransparency = 0.9
                highlight.OutlineTransparency = 0
                highlight.Parent = gen
                
                generatorData[gen] = {
                    billboard = billboard,
                    distanceBillboard = distanceBillboard,
                    textLabel = textLabel,
                    distanceLabel = distanceLabel,
                    highlight = highlight
                }
                
                gen.Destroying:Connect(function()
                    if generatorData[gen] then
                        if generatorData[gen].billboard then generatorData[gen].billboard:Destroy() end
                        if generatorData[gen].distanceBillboard then generatorData[gen].distanceBillboard:Destroy() end
                        if generatorData[gen].highlight then generatorData[gen].highlight:Destroy() end
                        generatorData[gen] = nil
                    end
                end)
            end
            
            local function scanGenerators()
                for _, gen in pairs(workspace:GetDescendants()) do
                    if gen:IsA("Model") and gen:FindFirstChild("Main") and gen.Name == "Generator" then
                        createGeneratorESP(gen)
                    end
                end
            end
            
            local mainConnection = workspace.DescendantAdded:Connect(function(v)
                if v:IsA("Model") and v:FindFirstChild("Main") and v.Name == "Generator" then
                    createGeneratorESP(v)
                end
            end)
            
            local heartbeatConnection = game:GetService("RunService").Heartbeat:Connect(function(deltaTime)
                lastScanTime = lastScanTime + deltaTime
                if lastScanTime >= scanInterval then
                    lastScanTime = 0
                    scanGenerators()
                end
                
                for gen, data in pairs(generatorData) do
                    if gen and gen.Parent then
                        updateGeneratorESP(gen, data)
                    else
                        if data.billboard then data.billboard:Destroy() end
                        if data.distanceBillboard then data.distanceBillboard:Destroy() end
                        if data.highlight then data.highlight:Destroy() end
                        generatorData[gen] = nil
                    end
                end
            end)
            
            -- 存储连接以便之后断开
            generatorData.connections = {
                main = mainConnection,
                heartbeat = heartbeatConnection
            }
        else
            -- 关闭功能时的清理逻辑
            if generatorData.connections then
                for _, connection in pairs(generatorData.connections) do
                    if connection then
                        connection:Disconnect()
                    end
                end
            end
            
            for gen, data in pairs(generatorData) do
                if type(data) == "table" then
                    if data.billboard then data.billboard:Destroy() end
                    if data.distanceBillboard then data.distanceBillboard:Destroy() end
                    if data.highlight then data.highlight:Destroy() end
                end
            end
        end
    end
})
local Tab6 = Window:Tab({
        Title = "VIP动作🤑",
        Icon = "drama",
        Locked = false,
    })

local Toggle14 = Tab6:Toggle({
        Title = "VIP动作",
        Desc = "新版",
        Locked = false,
        Callback = function(state)
        local char = game.Players.LocalPlayer.Character or game.Players.LocalPlayer.CharacterAdded:Wait()
        local humanoid = char:WaitForChild("Humanoid")
        local rootPart = char:WaitForChild("HumanoidRootPart")
        
        if state then
            -- 激活状态（完整实现）
            humanoid.PlatformStand = true
            humanoid.JumpPower = 0
            
            local bodyVelocity = Instance.new("BodyVelocity")
            bodyVelocity.MaxForce = Vector3.new(100000, 100000, 100000)
            bodyVelocity.Velocity = Vector3.zero
            bodyVelocity.Parent = rootPart
            
            local animation = Instance.new("Animation")
            animation.AnimationId = "rbxassetid://138019937280193"
            local animationTrack = humanoid:LoadAnimation(animation)
            animationTrack:Play()
            
            local sound = Instance.new("Sound")
            sound.SoundId = "rbxassetid://109474987384441"
            sound.Parent = rootPart
            sound.Volume = 0.5
            sound.Looped = true
            sound:Play()
            
            local effect = game:GetService("ReplicatedStorage").Assets.Emotes.HakariDance.HakariBeamEffect:Clone()
            effect.Name = "PlayerEmoteVFX"
            effect.CFrame = char.PrimaryPart.CFrame * CFrame.new(0, -1, -0.3)
            effect.WeldConstraint.Part0 = char.PrimaryPart
            effect.WeldConstraint.Part1 = effect
            effect.Parent = char
            effect.CanCollide = false
            
            local args = {
                [1] = "PlayEmote",
                [2] = "Animations",
                [3] = "HakariDance"
            }
            game:GetService("ReplicatedStorage"):WaitForChild("Modules"):WaitForChild("Network"):WaitForChild("RemoteEvent"):FireServer(unpack(args))
            
            animationTrack.Stopped:Connect(function()
                humanoid.PlatformStand = false
                if bodyVelocity and bodyVelocity.Parent then
                    bodyVelocity:Destroy()
                end
            end)
        else
            -- 关闭状态（完整实现）
            humanoid.PlatformStand = false
            humanoid.JumpPower = 0
            
            local bodyVelocity = rootPart:FindFirstChildOfClass("BodyVelocity")
            if bodyVelocity then bodyVelocity:Destroy() end
            
            local sound = rootPart:FindFirstChildOfClass("Sound")
            if sound then
                sound:Stop()
                sound:Destroy()
            end
            
            local effect = char:FindFirstChild("PlayerEmoteVFX")
            if effect then effect:Destroy() end
            
            for _, track in ipairs(humanoid:GetPlayingAnimationTracks()) do
                if track.Animation.AnimationId == "rbxassetid://138019937280193" then
                    track:Stop()
                end
            end
        end
    end
})

local Toggle15 = Tab6:Toggle({
        Title = "VIP动作",
        Desc = "旧版",
        Locked = false,
        Callback = function(state)
        local char = game.Players.LocalPlayer.Character or game.Players.LocalPlayer.CharacterAdded:Wait()
        local humanoid = char:WaitForChild("Humanoid")
        local rootPart = char:WaitForChild("HumanoidRootPart")
        
        if state then
            -- 激活状态（完整实现）
            humanoid.PlatformStand = true
            humanoid.JumpPower = 0
            
            local bodyVelocity = Instance.new("BodyVelocity")
            bodyVelocity.MaxForce = Vector3.new(100000, 100000, 100000)
            bodyVelocity.Velocity = Vector3.zero
            bodyVelocity.Parent = rootPart
            
            local animation = Instance.new("Animation")
            animation.AnimationId = "rbxassetid://138019937280193"
            local animationTrack = humanoid:LoadAnimation(animation)
            animationTrack:Play()
            
            local sound = Instance.new("Sound")
            sound.SoundId = "rbxassetid://87166578676888"
            sound.Parent = rootPart
            sound.Volume = 0.5
            sound.Looped = true
            sound:Play()
            
            local effect = game:GetService("ReplicatedStorage").Assets.Emotes.HakariDance.HakariBeamEffect:Clone()
            effect.Name = "PlayerEmoteVFX"
            effect.CFrame = char.PrimaryPart.CFrame * CFrame.new(0, -1, -0.3)
            effect.WeldConstraint.Part0 = char.PrimaryPart
            effect.WeldConstraint.Part1 = effect
            effect.Parent = char
            effect.CanCollide = false
            
            local args = {
                [1] = "PlayEmote",
                [2] = "Animations",
                [3] = "HakariDance"
            }
            game:GetService("ReplicatedStorage"):WaitForChild("Modules"):WaitForChild("Network"):WaitForChild("RemoteEvent"):FireServer(unpack(args))
            
            animationTrack.Stopped:Connect(function()
                humanoid.PlatformStand = false
                if bodyVelocity and bodyVelocity.Parent then
                    bodyVelocity:Destroy()
                end
            end)
        else
            -- 关闭状态（完整实现）
            humanoid.PlatformStand = false
            humanoid.JumpPower = 0
            
            local bodyVelocity = rootPart:FindFirstChildOfClass("BodyVelocity")
            if bodyVelocity then bodyVelocity:Destroy() end
            
            local sound = rootPart:FindFirstChildOfClass("Sound")
            if sound then
                sound:Stop()
                sound:Destroy()
            end
            
            local effect = char:FindFirstChild("PlayerEmoteVFX")
            if effect then effect:Destroy() end
            
            for _, track in ipairs(humanoid:GetPlayingAnimationTracks()) do
                if track.Animation.AnimationId == "rbxassetid://138019937280193" then
                    track:Stop()
                end
            end
        end
    end
})
